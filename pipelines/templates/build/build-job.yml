# This file contains the build pipeline template for the project.

parameters:
  - name: runScripts
    type: boolean
    default: false
  - name: solution
    type: string
    default: ''
  - name: buildPlatform
    type: string
    default: ''
  - name: buildConfiguration
    type: string
    default: ''
  - name: randomParameter
    type: string
    default: 'MyValue'

steps:

# This task prints the values.
- task: PowerShell@2
  displayName: 'Print values'
  inputs:
    targetType: 'inline'
    script: |
      Write-Output "run scripts: ${{ parameters.runScripts }}"
      Write-Output "solution: ${{ parameters.solution }}"
      Write-Output "build platform: ${{ parameters.buildPlatform }}"
      Write-Output "build configuration: ${{ parameters.buildConfiguration }}"
      Write-Output "random parameter: ${{ parameters.RandomParameter }}"

# This task installs the NuGet tool.
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

# This task restores the NuGet packages.
- task: NuGetCommand@2
  displayName: 'Restore packages'
  inputs:
    command: 'restore'
    feedsToUse: 'config'
    nugetConfigPath: './nuget.config'
    restoreSolution: '${{ parameters.solution }}'

# This task builds the DataSnipper project.
- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: '${{ parameters.solution }}'
    platform: '${{ parameters.buildPlatform }}'
    configuration: '${{ parameters.buildConfiguration }}'
    msbuildArgs: '/p:TreatWarningsAsErrors="true"'

# This task publishes the build result.
- publish: $(Build.SourcesDirectory) 
  artifact: built-source